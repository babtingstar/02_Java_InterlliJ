
try - catch 단축키 : Ctrl + Alt + T / if while try-catch 후작성에 사용

예외 발생 구문을 try - catch 로 처리 (예외 처리)

-try{} : 예외가 발생하는 코드들을 시도하는 구문
                 1. try{} ~ catch{}
                 1. try{} ~ catch{} ~ catch{}
                 1. try{} ~ catch{} ~ catch{} ~ catch{}
                 1. try{} ~ catch{} ~ ....... ~ finally{}
                 2. try{} ~ finally{}

-catch(예외){} : try 안의 코드 실행중,
                 발생한 문제가 예상한 문제와 같으면 {}안의 구문 실행
                 예외를 다른 방식으로 처리했기 때문에 프로그램이 멈추지 않고 실행됨
                 여러개 작성 가능

- finally{} : catch 에 관계 없이 마지막에 무조건적으로 실행하는 코드를 작성
              - 필수로 작성하는 것이 아니라, 필요하다면 선택적으로 작성
              - 작성하는 경우에는
                 1. try{} ~ catch{} ~ finally{}
                 2. try{} ~ finally{}
              - 외부 프로그램 / 장치 연결을 강제적으로 끊어야 할 때 사용


- e.printStackTrace() : 호출 기능 순서대로 발생한 예외(문제)들을 모두 추적해서 가시화

-throw new RuntimeException(e) : throw 발생한 예외를 현재 위치에서 보여줌

문제가 발생하는데, 어떤 문제인지 예상이 되지 않을 경우
catch(Exception e) 로 작성하면 모든 문제는 잡힘
